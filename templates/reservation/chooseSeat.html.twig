{% extends 'base.html.twig' %}

{% block title %}Event Seat Booking{% endblock %}

{% block css %}
<style>
html, body {
    background: #f8f9fa !important;
    margin: 0 !important;
    padding: 0 !important;
    box-sizing: border-box;
    overflow-x: hidden !important;
    font-family: 'Montserrat', sans-serif;
}
body > * {
    margin: 0 !important;
    padding: 0 !important;
}
h1, h2, h3 {
    font-family: 'Poppins', sans-serif;
    font-weight: 600;
}
.main-container {
    display: flex;
    flex-direction: row;
    width: 100%;
    min-height: 100vh;
    padding: 0;
    gap: 20px;
}
.event-info {
    position: sticky;
    top: 0;
    flex: 0 0 340px;
    min-width: 300px;
    max-width: 400px;
    height: 100vh;
    overflow-y: auto;
    border-radius: 0 18px 18px 0;
    background: transparent;
}
.seats-section {
    flex: 1 1 auto;
    padding: 20px;
    max-width: 1700px;
    overflow-y: auto;
    height: 100vh;
}
@media (max-width: 1200px) {
    .main-container {
        flex-direction: column;
    }
    .event-info {
        position: relative;
        height: auto;
        max-width: 100%;
        flex: 0 0 auto;
        width: 100%;
        border-radius: 0;
    }
    .seats-section {
        height: auto;
    }
}
</style>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600&family=Poppins:wght@500;600;700&display=swap" rel="stylesheet">
{% endblock %}

{% block body %}
<div class="main-container">
    <!-- Event Details with faded image (on extreme left) -->
    <div class="event-info">
        {% if event.image %}
            <div style="
                position: absolute;
                inset: 0;
                background: url('{{ asset('ImagesEvents/' ~ event.image) }}') center center/cover no-repeat;
                opacity: 0.49;
                z-index: 1;
            "></div>
        {% endif %}
        <div style="position: relative; z-index: 2; padding: 32px 24px 24px 24px; color: #222;">
            <h2 style="margin-top: 0; font-size: 2.2rem; font-weight: 600; font-family: 'Poppins', sans-serif; letter-spacing: -0.5px;">{{ event.title }}</h2>
            <div style="margin-bottom: 18px; font-size: 1.1rem; font-weight: 500;">{{ event.location }}</div>
            <div style="margin-bottom: 18px;">
                <strong>Date :</strong> {{ event.date_event|date('d F Y') }}<br>
                <strong>Heure :</strong> {{ event.date_event|date('H:i') }}<br>
                <strong>Fin prévue :</strong> {{ event.dateFinEve|date('H:i') }}
            </div>
            <div style="margin-bottom: 18px;">
                <strong>Places libres :</strong> {{ event.nb_places - reservedSeats|length }}
            </div>
            {% if event.image %}
                <img src="{{ asset('ImagesEvents/' ~ event.image) }}" alt="event" style="width: 100%; max-width: 300px; border-radius: 8px; box-shadow: 0 2px 8px rgba(0,0,0,0.2); margin-bottom: 10px;">
            {% endif %}
        </div>
    </div>

    <!-- Seat selection and payment (right) -->
    <div class="seats-section">
        <h1 style="text-align: center; margin-bottom: 20px; font-family: 'Poppins', sans-serif; font-weight: 600; letter-spacing: -0.5px; font-size: 2.4rem;">Sélectionnez vos places</h1>
        <div style="text-align: center; margin-bottom: 30px; font-size: 18px; color: #666; font-weight: 500;">
            {{ event.nb_places - reservedSeats|length }} places libres
        </div>
        <hr style="border: 1px solid #ddd; margin-bottom: 30px;">
        
        <!-- Seat selection section -->
        <div style="margin-bottom: 30px;">
            <!-- Legend for seat status -->
            <div style="margin-bottom: 20px; display: flex; justify-content: center; gap: 20px; flex-wrap: wrap;">
                <div style="display: flex; align-items: center;">
                    <div style="width: 30px; height: 30px; background-color: #fff; border-radius: 5px; background-image: url('{{ asset('Reservation/seat2.png') }}'); background-size: cover; background-position: center; margin-right: 10px;"></div>
                    <span style="font-size: 14px; font-weight: 500;">Fauteuil libre</span>
                </div>
                <div style="display: flex; align-items: center;">
                    <div style="width: 30px; height: 30px; background-color: #fff; border-radius: 5px; background-image: url('{{ asset('Reservation/seatRESER.png') }}'); background-size: cover; background-position: center; margin-right: 10px;"></div>
                    <span style="font-size: 14px; font-weight: 500;">Fauteuil occupé</span>
                </div>
                <div style="display: flex; align-items: center;">
                    <div style="width: 30px; height: 30px; background-color: rgb(240, 228, 61); border-radius: 5px; background-image: url('{{ asset('Reservation/seat2.png') }}'); background-size: cover; background-position: center; margin-right: 10px;"></div>
                    <span style="font-size: 14px; font-weight: 500;">Votre sélection</span>
                </div>
            </div>
            
            <!-- Seat grid -->
            <div style="background-color: white; border-radius: 8px; padding: 20px; margin-bottom: 30px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); overflow-x: auto; width: 100%;">
                <div class="container" style="margin: 0 auto; perspective: 1000px; display: flex; flex-direction: column; align-items: center;">
                    <div id="seats-container" style="display: flex; flex-direction: column; align-items: center; min-width: min-content;">
                    {% set seatLayout = [
                        [0,0,1,1,1,1,1,1,1,1,1,1,0,0],
                        [0,1,1,1,1,1,1,1,1,1,1,1,1,0],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                        [1,1,1,1,1,1,1,1,1,1,1,1,1,1]
                    ] %}
                    {% set seat_number = 1 %}
                    {% for row in seatLayout %}
                        <div style="display: flex; justify-content: center; flex-wrap: wrap; margin-bottom: 10px;">
                            {% for seat in row %}
                                {% if seat == 1 %}
                                    <div class="seat {% if seat_number in reservedSeats %}occupied{% endif %}" 
                                        data-seat="{{ seat_number }}"
                                        style="width: 60px; 
                                               height: 60px; 
                                               margin: 3px; 
                                               background-image: url('{{ seat_number in reservedSeats ? asset('Reservation/seatRESER.png') : asset('Reservation/seat2.png') }}'); 
                                               background-size: cover; 
                                               background-position: center;
                                               cursor: pointer;
                                               position: relative;
                                               transition: all 0.2s ease;
                                               border-radius: 10px;
                                               box-shadow: 0 2px 4px rgba(0,0,0,0.1);
                                               {% if seat_number in reservedSeats %} 
                                                   opacity: 0.7; 
                                                   cursor: not-allowed;
                                               {% endif %}">
                                        <div class="seat-number-tooltip" 
                                            style="position: absolute; 
                                                   bottom: -30px; 
                                                   left: 50%; 
                                                   transform: translateX(-50%); 
                                                   background-color: rgba(0,0,0,0.8); 
                                                   color: white; 
                                                   padding: 5px 10px; 
                                                   border-radius: 4px; 
                                                   font-size: 12px;
                                                   font-weight: 500;
                                                   white-space: nowrap;
                                                   visibility: hidden;
                                                   opacity: 0;
                                                   transition: opacity 0.2s ease;
                                                   z-index: 10;">
                                            {{ seat_number }} - Fauteuil {{ seat_number in reservedSeats ? 'occupé' : 'libre' }}
                                        </div>
                                    </div>
                                    {% set seat_number = seat_number + 1 %}
                                {% else %}
                                    <div style="width: 60px; height: 60px; margin: 3px;"></div>
                                {% endif %}
                            {% endfor %}
                        </div>
                    {% endfor %}
                    
                    <!-- Screen below seats -->
                    <div style="width: 90%; height: 20px; background-color: #444; margin-top: 50px; border-radius: 10px; text-align: center; font-size: 14px; color: #fff; padding: 3px 0; font-family: 'Poppins', sans-serif; font-weight: 500; letter-spacing: 1px;">ÉCRAN</div>
                </div>
            </div>
        </div>

        <div style="text-align: center; margin-bottom: 20px;">
            <p style="font-size: 16px; font-weight: 500;">
                You have selected <span id="count" style="color: rgb(240, 228, 61); font-weight: 600;">0</span> seat(s)
            </p>
        </div>
        <!-- Payment Form -->
        <div style="max-width: 500px; margin: 0 auto;">
            <form id="payment-form" style="text-align: center;">
                <input type="hidden" name="event_id" value="{{ event.id_event }}">
                <input type="hidden" name="seat_number" id="selectedSeat">
                <div id="card-element" style="padding: 12px; border: 1px solid #ddd; border-radius: 4px; margin: 20px 0;"></div>
                <div id="card-errors" role="alert" style="color: #ff0000; margin-bottom: 20px;"></div>
                <button type="submit" id="submit-payment" style="background-color: rgb(240, 228, 61); color: white; border: none; padding: 12px 24px; border-radius: 5px; font-size: 16px; font-family: 'Poppins', sans-serif; font-weight: 600; cursor: pointer; width: 100%;" disabled>
                    Payer maintenant ({{ event.prix }} TND)
                </button>
            </form>
        </div>
    </div>
</div>

<script src="https://js.stripe.com/v3/"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize Stripe
    const stripe = Stripe('{{ stripe_public_key }}');
    const elements = stripe.elements();
    const cardElement = elements.create('card');
    cardElement.mount('#card-element');
    
    // Handle seat selection
    let selectedSeat = null;
    const count = document.getElementById('count');
    const submitButton = document.getElementById('submit-payment');
    
    // Add event listeners to seats
    document.querySelectorAll('.seat').forEach(seat => {
        seat.addEventListener('mouseover', function() {
            if (!this.classList.contains('occupied')) {
                this.style.transform = 'scale(1.05)';
                this.style.boxShadow = '0 4px 8px rgba(0,0,0,0.2)';
            }
            // Show tooltip on hover
            const tooltip = this.querySelector('.seat-number-tooltip');
            if (tooltip) {
                tooltip.style.visibility = 'visible';
                tooltip.style.opacity = '1';
            }
        });
        
        seat.addEventListener('mouseout', function() {
            if (!this.classList.contains('occupied') && this !== selectedSeat) {
                this.style.transform = 'scale(1)';
                this.style.boxShadow = '0 2px 4px rgba(0,0,0,0.1)';
            }
            // Hide tooltip on mouseout
            const tooltip = this.querySelector('.seat-number-tooltip');
            if (tooltip) {
                tooltip.style.visibility = 'hidden';
                tooltip.style.opacity = '0';
            }
        });
    });
    
    // Seat click event
    document.querySelectorAll('.seat:not(.occupied)').forEach(seatElement => {
        seatElement.addEventListener('click', function() {
            if (selectedSeat !== null) {
                selectedSeat.style.transform = 'scale(1)';
                selectedSeat.style.backgroundColor = '';
                selectedSeat.style.backgroundImage = "url('{{ asset('Reservation/seat2.png') }}')";
            }
            
            seatElement.style.transform = 'scale(1.1)';
            seatElement.style.backgroundColor = 'rgb(240, 228, 61)';
            seatElement.style.backgroundImage = "url('{{ asset('Reservation/seat2.png') }}')";
            selectedSeat = seatElement;
            document.getElementById('selectedSeat').value = seatElement.dataset.seat;
            document.getElementById('count').textContent = '1';
            
            // Enable payment button when seat is selected
            submitButton.disabled = false;
        });
    });
    
    // Handle form submission
    const form = document.getElementById('payment-form');
    form.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        if (!selectedSeat) {
            alert('Veuillez sélectionner une place');
            return;
        }
        
        const eventId = document.querySelector('input[name="event_id"]').value;
        submitButton.disabled = true;
        submitButton.textContent = 'Traitement en cours...';
        
        try {
            // 1. Create payment intent
            const paymentResponse = await fetch('{{ path('app_create_payment_intent') }}', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    event_id: eventId,
                    seat_number: selectedSeat.dataset.seat
                })
            });
            
            // Check response is JSON
            const contentType = paymentResponse.headers.get('content-type');
            if (!contentType || !contentType.includes('application/json')) {
                throw new Error("Invalid response format from server");
            }
            
            const paymentResult = await paymentResponse.json(); // Renamed from 'data' to 'paymentResult'
            
            if (!paymentResponse.ok) {
                throw new Error(paymentResult.error || 'Échec du paiement');
            }
            
            // 2. Confirm payment with Stripe
            const { error, paymentIntent } = await stripe.confirmCardPayment(
                paymentResult.clientSecret, { // Using paymentResult instead of data
                    payment_method: { 
                        card: cardElement,
                        billing_details: {
                            name: 'Client'
                        }
                    }
                }
            );
            
            if (error) throw error;

            console.log("Payment succeeded with ID:", paymentIntent.id);

            // 3. Confirm reservation - using same content-type as createPaymentIntent
            const confirmResponse = await fetch('{{ path("app_confirm_reservation") }}', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                },
                body: JSON.stringify({
                    payment_intent_id: paymentIntent.id,
                    event_id: eventId,
                    seat_number: selectedSeat.dataset.seat
                })
            });

            // Check confirmation response
            const confirmContentType = confirmResponse.headers.get('content-type');
            if (!confirmContentType || !confirmContentType.includes('application/json')) {
                throw new Error("Invalid confirmation response format");
            }

            const confirmResult = await confirmResponse.json();
            
            if (!confirmResponse.ok) {
                throw new Error(confirmResult.error || 'Failed to confirm reservation');
            }

            // Redirect on success
            window.location.href = '{{ path('app_payment_success') }}?payment_intent=' + paymentIntent.id;
            
        } catch (err) {
            console.error('Payment error:', err);
            document.getElementById('card-errors').textContent = err.message || 'Une erreur est survenue';
            submitButton.disabled = false;
            submitButton.textContent = `Payer maintenant ({{ event.prix }} TND)`;
        }
    });
    
    // Handle card errors
    cardElement.addEventListener('change', ({error}) => {
        const displayError = document.getElementById('card-errors');
        displayError.textContent = error ? error.message : '';
    });
});
</script>
{% endblock %} 