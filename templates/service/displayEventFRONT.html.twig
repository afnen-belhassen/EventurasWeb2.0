{% extends 'base.html.twig' %}

{% block title %}Event Details{% endblock %}

{% block css %}
    {{ parent() }}
    <style>
        .nav-link{
            color:white !important;
        }
        .text-center{
            color:white !important;
        }
        body {
            background-color: #0d064ffd;
            animation: backgroundAnimation 10s infinite alternate;
        }

        .navbar {
            background-color:rgba(255, 255, 255, 0.99);
            color: white;
        }

        .navbar a {
            color:rgba(255, 255, 255, 0.99);
        }

        .event-card {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 15px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            padding: 20px;
            margin-top: 20px;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

        .event-card:hover {
            transform: translateY(-10px) scale(1.02);
            box-shadow: 
                0 8px 30px rgba(0, 0, 0, 0.2),
                0 0 15px rgba(93, 70, 255, 0.6),
                0 0 30px rgba(93, 70, 255, 0.4);
            cursor: pointer;
        }

        .floating-man {
            position: absolute;
            bottom: 20px;
            right: 20px;
            width: 100px; /* Adjust size as needed */
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
            100% { transform: translateY(0); }
        }

        .event-details {
            margin-top: 20px;
        }

        .event-details h2 {
            font-size: 24px;
            margin-bottom: 10px;
            color: white; /* Titre en blanc */
        }

        .event-details p {
            margin: 5px 0;
            font-color: #0d064ffd !important;
        }

        .navbar-brand {
            color: #0d064ffd !important; /* Using !important to override any other styles */
            font-weight: bold;
            font-size: 24px;
            text-decoration: none !important; /* Remove underline */
        }
        
        .navbar-brand:hover,
        .navbar-brand:focus,
        .navbar-brand:active {
            color: #0d064ffd !important; /* Same color on all states */
            text-decoration: none !important;
        }

        .participer-btn {
            background-color: #5d46ff;
            border: none;
            transition: background-color 0.3s ease, transform 0.3s ease;
            font-weight: bold;
            padding: 8px 20px;
            border-radius: 30px;
        }

        .participer-btn:hover {
            background-color: #3f2fd3;
            transform: scale(1.05);
            box-shadow: 0 0 10px rgba(93, 70, 255, 0.7);
        }

        /* New reservation button style */
        .reserver-btn {
            background-color: #28a745;
            color: white;
            border: none;
            padding: 10px 25px;
            border-radius: 5px;
            font-weight: bold;
            margin-top: 15px;
            transition: all 0.3s ease;
            display: inline-block;
            text-align: center;
            width: 100%;
        }

        .reserver-btn:hover {
            background-color: #218838;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        }
        .reserver-btn {
            background-color: #5d46ff;
            color: white;
            border: none;
            padding: 10px 25px;
            border-radius: 30px;
            font-weight: bold;
            margin-top: 15px;
            transition: all 0.3s ease;
            display: inline-block;
            text-align: center;
            width: 100%;
            text-decoration: none;
        }

        .reserver-btn:hover {
            background-color: #3f2fd3;
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(93, 70, 255, 0.7);
        }
        
        .btn-container {
            margin-top: 20px;
            padding-top: 15px;
            border-top: 1px solid #eee;
        }
        .dropdown-menu {
            background-color: white;
            border: 1px solid rgba(0,0,0,.15);
            border-radius: 0.25rem;
            box-shadow: 0 0.5rem 1rem rgba(0,0,0,.175);
        }

        .dropdown-item {
            color: #212529;
            padding: 0.25rem 1.5rem;
        }

        .dropdown-item:hover {
            background-color: #f8f9fa;
            color: #16181b;
        }
       .star-rating {
    display: inline-flex;
    align-items: center;
    font-size: 24px;
    line-height: 1;
}

.star {
    color: lightgray;
    cursor: pointer;
    transition: color 0.2s;
    margin: 0 2px;
}

.star.rated {
    color: gold;
}

.star.hover {
    color: orange;
}

.rating-text {
    font-size: 14px;
    margin-left: 8px;
    color: #666;
}

.user-rating {
    margin-top: 8px;
}

.user-rating small {
    font-size: 12px;
    color: #666;
    margin-right: 8px;
}
.read-btn {
    cursor: pointer;
    border-radius: 30px;
    font-weight: bold;
    padding: 8px 20px;
    transition: background-color 0.3s ease, transform 0.3s ease;
}

.read-btn:hover {
    background-color: #3f2fd3;
    color: white;
    transform: scale(1.05);
    box-shadow: 0 0 10px rgba(93, 70, 255, 0.7);
}

    </style>
{% endblock %}

{% block body %}
    <nav class="navbar navbar-expand-lg">
        <div class="container ">
            <a class="navbar-brand" href="{{ path('app_home_part') }}">
                Eventura
            </a>

            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav align-items-lg-center ms-auto me-lg-5">
                    <li class="nav-item">
                        <a class="nav-link click-scroll" href="#section_4">Contact</a>
                    </li>
                </ul>

                <div class="d-flex gap-2">
                  
                   {{ include('service/sidebarPart.html.twig') }}
                </div>
            </div>
        </div>
    </nav>
    
    <div class="container mt-5">
        <h2 class="text-center mb-4">Événements Disponibles</h2>
        <!-- Filter Dropdown -->
      <div class="mb-4 text-center">
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            Filtrer par
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton" style="z-index: 1000;">
            <li><a class="dropdown-item" href="{{ path('app_accepted_events', { sort: 'upcoming' }) }}">Événements à venir</a></li>
            <li><a class="dropdown-item" href="{{ path('app_accepted_events', { sort: 'passed' }) }}">Événements passés</a></li>
            <li><a class="dropdown-item" href="{{ path('app_accepted_events', { sort: 'price_asc' }) }}">Prix croissant</a></li>
            <li><a class="dropdown-item" href="{{ path('app_accepted_events', { sort: 'price_desc' }) }}">Prix décroissant</a></li>
        </ul>
    </div>
</div>
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            {% for event in events %}
                <div class="col d-flex justify-content-center">
                    <div class="event-card p-3 border rounded shadow-sm w-100" style="max-width: 400px;">
                        <div class="event-details text-center">
                            <h3 style="font-size: 1.4rem;">{{ event.title }}</h3>
                            <div class="event-meta text-muted mb-2" style="font-size: 0.9rem;">
                                <div>{{ event.location }} • 
                                    {% if event.date_event and event.dateFinEve %}
                                        {{ event.date_event.diff(event.dateFinEve).h }} heures
                                    {% else %}
                                        Durée non spécifiée
                                    {% endif %}
                                </div>
                                <div>
                                    {{ event.date_event ? event.date_event|date('d M Y') : 'Date non spécifiée' }} • 
                                    {{ event.date_event ? event.date_event|date('H:i') : '' }}
                                </div>
                            </div>
                            <p class="event-description" style="font-size: 0.95rem;">{{ event.description }}</p>

                            {% if event.image %}
                                <div class="event-image my-3">
                                    <img src="{{ asset('ImagesEvents/' ~ event.image) }}" 
                                         alt="{{ event.title }}" 
                                         class="img-fluid rounded" 
                                         style="max-height: 250px;">
                                </div>
                            {% endif %}

                            <div class="d-flex justify-content-center gap-3 flex-wrap mt-3 text-muted" style="font-size: 0.9rem;">
                                <span>{{ event.category.name }}</span>
                                <span>•</span>
                                <span>
                                    {% if event.prix > 0 %}
                                        {{ event.prix }} TND
                                    {% else %}
                                        Gratuit
                                    {% endif %}
                                </span>
                                <span>•</span>
                                <span>{{ event.nb_places }} participants</span>
                            </div>
                            {% if event.date_event < date() %}
                                <div class="mt-3">
                                    <strong>Average Rating:</strong>
                                    <div class="star-rating" data-event-id="{{ event.id_event }}">
                                        {% set averageRating = event.getAverageRating() %}
                                        {% for i in 1..5 %}
                                            <span class="star {% if averageRating >= i %}rated{% endif %}">★</span>
                                        {% endfor %}
                                        <span class="rating-text">
                                            ({{ averageRating|number_format(1) }} from {{ event.ratings|length }} ratings)
                                        </span>
                                    </div>
                                    
                                    {# User rating section #}
                                    {% set user_id = 1 %}
                                    {% set userRating = null %}
                                    {% for rating in event.ratings %}
                                         {% if rating.user_id == user_id %}
                                            {% set userRating = rating.value %}
                                        {% endif %}
                                    {% endfor %}
                                    
                                    <div class="user-rating mt-2">
                                        <small>Your Rating:</small>
                                        <div class="star-rating user-stars" data-event-id="{{ event.id_event }}">
                                            {% for i in 1..5 %}
                                                <span class="star {% if userRating >= i %}rated{% endif %}" 
                                                    data-value="{{ i }}">★</span>
                                            {% endfor %}
                                        </div>
                                    </div>
                                </div>
                                <button class="read-btn btn btn-outline-primary mt-3">Read</button>
                                <button class="reserver-btn" disabled style="background-color: #6c757d; cursor: not-allowed;">
                                    Événement terminé
                                </button>
                            {% else %}
                                <!-- Added Reserve Button -->
                                <a href="{{ path('app_seat_selection', {'id_event': event.id_event}) }}" class="reserver-btn">
                                    Réserver une place
                                </a>
                            {% endif %}
                        </div>
                    </div>
                </div>
            {% else %}
                <p class="text-center">Aucun événement disponible pour le moment.</p>
            {% endfor %}
        </div>
    </div>
{% block js %}

{{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script>
document.addEventListener('DOMContentLoaded', function() {
    document.querySelectorAll('.user-stars .star').forEach(star => {
        star.addEventListener('click', function() {
            const eventId = this.closest('.user-stars').dataset.eventId;
            const value = this.dataset.value;
            
            fetch(`/event/${eventId}/rate/${value}`, {
                method: 'POST',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (!response.ok) {
                    throw new Error('Network response was not ok');
                }
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    // Update user stars
                    const userStars = this.parentElement.querySelectorAll('.star');
                    userStars.forEach((star, index) => {
                        star.classList.toggle('rated', (index + 1) <= value);
                    });
                    
                    // Update average rating display
                    const averageRating = data.averageRating;
                    const ratingCount = data.ratingCount;
                    document.querySelector(`.star-rating[data-event-id="${eventId}"] .rating-text`)
                        .textContent = `(${averageRating.toFixed(1)} from ${ratingCount} ratings)`;
                        
                    // Update average stars
                    const avgStars = document.querySelector(`.star-rating[data-event-id="${eventId}"]`).querySelectorAll('.star');
                    avgStars.forEach((star, index) => {
                        star.classList.toggle('rated', (index + 1) <= Math.round(averageRating));
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });
        
        // Hover effects
        star.addEventListener('mouseover', function() {
            const value = this.dataset.value;
            const stars = this.parentElement.querySelectorAll('.star');
            stars.forEach((star, index) => {
                star.classList.toggle('hover', (index + 1) <= value);
            });
        });
        
        star.addEventListener('mouseout', function() {
            const stars = this.parentElement.querySelectorAll('.star');
            stars.forEach(star => {
                star.classList.remove('hover');
            });
        });
    });
});


//TEXT to speech
document.addEventListener('DOMContentLoaded', function() {
  let hoveredCard = null;
  let currentUtterance = null;

  // Get French voice if available
  function getFrenchVoice() {
    const voices = window.speechSynthesis.getVoices();
    return voices.find(voice => voice.lang.startsWith('fr')) || null;
  }

  // Speak given text in French voice if available
  function speakText(text) {
    if ('speechSynthesis' in window) {
      // Cancel any previous utterance
      window.speechSynthesis.cancel();

      currentUtterance = new SpeechSynthesisUtterance(text);

      const frenchVoice = getFrenchVoice();
      if (frenchVoice) {
        currentUtterance.voice = frenchVoice;
      }

      window.speechSynthesis.speak(currentUtterance);
    } else {
      alert('Votre navigateur ne supporte pas la synthèse vocale.');
    }
  }

  // Stop speaking
  function stopSpeaking() {
    if ('speechSynthesis' in window) {
      window.speechSynthesis.cancel();
      currentUtterance = null;
    }
  }

  // Track which event card is hovered
  document.querySelectorAll('.event-card').forEach(card => {
    card.addEventListener('mouseenter', () => {
      hoveredCard = card;
    });
    card.addEventListener('mouseleave', () => {
      hoveredCard = null;
    });
  });

  // Listen for keyboard events
  document.addEventListener('keydown', function(event) {
    if (event.key.toLowerCase() === 'f' && hoveredCard) {
      // Adjust selector to match your description paragraph class or element
      const descriptionElem = hoveredCard.querySelector('p'); // or '.event-description' if you add that class
      if (!descriptionElem) {
        console.error('Description element not found on hovered card');
        return;
      }
      const description = descriptionElem.textContent.trim();
      speakText(description);
    }

    if (event.key.toLowerCase() === 'j') {
      stopSpeaking();
    }
  });

  // OPTIONAL: Read button click handlers (if you have buttons with class .read-btn)
  document.querySelectorAll('.read-btn').forEach(button => {
    button.addEventListener('click', () => {
      // Find the event card container of this button
      const card = button.closest('.event-card');
      if (!card) return;

      const descriptionElem = card.querySelector('p'); // or '.event-description'
      if (!descriptionElem) return;

      const text = descriptionElem.textContent.trim();
      speakText(text);
    });
  });
});



</script>

{% endblock %}
{% endblock %}